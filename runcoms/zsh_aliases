#
# Package manager
#
alias ai='brew install'
alias aud='brew update'


#
# Docker
#
alias dki='docker inspect'
alias dkni='docker network inspect'
alias dknls='docker network ls'
alias dkls='docker ps'
alias dkr='docker run --detach'
# Run interactive container and remove when exit
alias dkR='docker run --interactive --tty --rm'
alias dkRe='docker run --interactive --tty --rm --entrypoint /bin/bash'

# DocKer Inspect Network
function dkin {
  docker inspect "$1" | python3 -c "import json,sys; j=json.load(sys.stdin)[0]; ns=j['NetworkSettings']; print('Gateway  : {}\nIPAddress: {}'.format(ns['Gateway'], ns['IPAddress']))"
}


#
# Git
#

# Branch (b)
alias gba='git branch --all --verbose'
alias gbc='git checkout -b' # Because this is equivalent to branch and then checkout
alias gbl='git branch --verbose'
alias gbL='git branch --verbose --all'

# Checkout (c)
alias gcm='git checkout master'
alias gco='git checkout'

# Commit (C)
alias gCa='git commit --all --verbose'
alias gCm='git commit --message'

# Working copy (w)
alias gwd='git diff --no-ext-diff'
alias gwr='git reset --soft'
alias gwR='git reset --hard'
alias gws='git status --short --ignore-submodules=all'
alias gwS='git status --ignore-submodules=all'


#
# Shell
#
alias esl='exec /usr/local/bin/zsh -l'

function fds {
  if [[ $1 == -d* ]]; then
    find . -name .DS_Store -type f -delete
  else
    find . -name .DS_Store -type f
  fi
}

function mkcd {
  mkdir -p "$1" && cd "$1"
}
